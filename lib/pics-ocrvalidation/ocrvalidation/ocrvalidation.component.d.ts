import { EventEmitter, Injector, OnInit } from '@angular/core';
import { AlertService } from '../service/alert.service';
import { DataStoreService } from '../service/data-store.service';
import { FormioComponent } from 'angular-formio';
import { OcrValidationService } from '../@core/ocr-validation.service';
import { Subscription } from 'rxjs';
import { RBACINFO } from '../@core/ocr-validation-url.config';
import * as i0 from "@angular/core";
export declare class OcrvalidationComponent implements OnInit {
    private ocrValidationService;
    private _storeservice;
    ocrDocumentDetails: any;
    imgUrl: any;
    showOcrForm: boolean;
    tableschemaconfig: any;
    jsonForm: any;
    isformIO: boolean;
    formIO: FormioComponent;
    formJson: Array<any>;
    triggerRefresh: any;
    authService: any;
    localstorage: any;
    dataStore: any;
    uploadService: any;
    alertService: AlertService;
    fromTitle: any;
    duplicateTableSchemaconfig: any;
    isOcrForm: any;
    documentType: any;
    sourceid: any;
    isReadOnly: boolean;
    environment: any;
    RBACORG: RBACINFO;
    orgSubs: Subscription;
    orgId: any;
    contentArray: Array<any>;
    formResponseData: any;
    currenttemplateResult: any;
    submitionData: any;
    ocrResponse: EventEmitter<any>;
    constructor(injector: Injector, ocrValidationService: OcrValidationService, _storeservice: DataStoreService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private getTemplate;
    getUpload(obj: any): void;
    ocrFormPatching(): void;
    backToForm(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<OcrvalidationComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<OcrvalidationComponent, "lib-ocrvalidation", never, { "formResponseData": "formResponseData"; "currenttemplateResult": "currenttemplateResult"; "submitionData": "submitionData"; }, { "ocrResponse": "ocrResponse"; }, never, never>;
}
